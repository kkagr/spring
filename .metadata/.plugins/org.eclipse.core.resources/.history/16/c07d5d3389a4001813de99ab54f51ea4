package com.liu.springboot;

import java.io.File;

import javax.servlet.ServletException;

import org.apache.catalina.LifecycleException;
import org.apache.catalina.WebResource;
import org.apache.catalina.WebResourceRoot;
import org.apache.catalina.core.StandardContext;
import org.apache.catalina.startup.Tomcat;
import org.apache.catalina.webresources.DirResourceSet;
import org.apache.catalina.webresources.StandardRoot;

import com.liu.springboot.servlet.IndexServlet;
import com.liu.springboot.tomcat.FixContextListener;

public class AppTomcat {
	
	public static void main(String[] args) {
		//使用java内置tomcat运行SpringMVC框架
		//原理tomcat加载到springMVC注解启动方式，就会创建springMVC容器
		//创建tomcat服务器
			start();
	}

	private static void start() throws ServletException, LifecycleException {
		//创建tomcat服务器
		Tomcat tomcat = new Tomcat();
		//指导端口
		tomcat.setPort(9090);
		//是否设置自动部署
		tomcat.getHost().setAutoDeploy(false);
		//创建上下文
		StandardContext standardContext = (StandardContext) tomcat.addWebapp("/", new File("src/main").getAbsolutePath());
		standardContext.setReloadable(false);
		File additionWebInfo = new File("target/classes");
		WebResourceRoot resources  = new StandardRoot(standardContext);
		resources.addPostResources(new DirResourceSet(resources, "/WEB-INF/classes", additionWebInfo.getAbsolutePath(), "/"));
		tomcat.start();
		//
		tomcat.getServer().await();
		System.out.println("tomcat启动成功");
	}
}
